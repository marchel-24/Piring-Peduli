<Window x:Class="PiringPeduliWPF.View.Windows.HomeScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PiringPeduliWPF.View.UserControls"
        xmlns:materialDesign ="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel ="clr-namespace:PiringPeduliWPF.ViewModel"
        mc:Ignorable="d"
        Title="HomeScreen" 
        Height="600" 
        Width="800" 
        WindowStartupLocation="CenterScreen" 
        WindowStyle="None" 
        ResizeMode="NoResize" 
        Background="{x:Null}" 
        AllowsTransparency="True">

    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModel:AccountViewModel}">
            <local:AccountView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:MainScreenViewModel}">
            <local:HomeScreen/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:PickUpViewModel}">
            <local:PickUp/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:SettingViewModel}">
            <local:SettingsFrame/>
        </DataTemplate>

        <!-- Gaya Button untuk teks yang dapat ditekan -->
        <Style TargetType="TextBlock" x:Key="TextVisibilityOnExpandTextBlock">
            <!-- Secara default sembunyikan teks -->
            <Setter Property="Visibility" Value="Collapsed"/>
            <!-- Triggers untuk memperlihatkan teks ketika grid diperluas -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActualWidth, ElementName=LeftGrid}" Value="150">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>



    </Window.Resources>

    <Grid>
        <materialDesign:Card Margin="10" UniformCornerRadius="15">
            <Grid>
                <Grid.ColumnDefinitions>
                    <!-- Left column with initial fixed width to allow dynamic expansion -->
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Left Grid that expands and overlays the right grid on hover -->
                <Grid Grid.Column="0" Width="50" x:Name="LeftGrid">
                    <Grid.Background>
                        <ImageBrush ImageSource="..\Assets\BackgroundDaun.png" Stretch="UniformToFill" AlignmentX="Right"/>
                    </Grid.Background>

                    <Grid.Resources>
                        <!-- Define the hover style for expanding and overlaying the grid to the right -->
                        <Style x:Key="OverlayExpandOnHoverStyle" TargetType="Grid">
                            <Setter Property="Panel.ZIndex" Value="0"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <!-- Pindahkan ke dalam Style -->
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                         To="150" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                         To="50" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </Grid.Resources>

                    <!-- Apply the overlay expand style to this Grid -->
                    <Grid.Style>
                        <StaticResource ResourceKey="OverlayExpandOnHoverStyle"/>
                    </Grid.Style>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.01*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.2*"/>
                    </Grid.RowDefinitions>

                    <!-- Buttons with TextBlocks next to them -->
                    <Button Style="{DynamicResource MaterilDesignFloatingActionButton}" 
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}" 
                            Foreground="White"
                            Command="{Binding ShowAccountViewCommand}"
                            Grid.Row="1">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="Account" Width="35" Height="35"/>
                                <TextBlock Text="Account" 
                                           Style="{StaticResource TextVisibilityOnExpandTextBlock}"
                                           VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>


                    <!-- Pick Up Button -->
                    <Button Style="{DynamicResource MaterilDesignFloatingActionButton}" 
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}" 
                            Foreground="White"
                            Command="{Binding ShowPickUpViewCommand}"
                            Grid.Row="2">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="MapMarker" Width="35" Height="35"/>
                                <TextBlock Text="Pick Up" 
                                           Style="{StaticResource TextVisibilityOnExpandTextBlock}"
                                           VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>

                    <!-- Home Button -->
                    <Button Style="{DynamicResource MaterilDesignFloatingActionButton}" 
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}" 
                            Foreground="White"
                            Command="{Binding ShowMainScreenViewCommand}"
                            Grid.Row="3">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="Home" Width="35" Height="35"/>
                              <TextBlock Text="Home" 
                                         Style="{StaticResource TextVisibilityOnExpandTextBlock}"
                                         VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>

                    <!-- Settings Button -->
                    <Button Style="{DynamicResource MaterilDesignFloatingActionButton}" 
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}" 
                            Foreground="White"
                            Command="{Binding ShowSettingsViewCommand}"
                            Grid.Row="5">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="Cog" Width="35" Height="35"/>
                                 <TextBlock Text="Settings" 
                                            Style="{StaticResource TextVisibilityOnExpandTextBlock}"
                                            VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>

                </Grid>

                <!-- Right Grid -->
                <Grid Grid.Column="1" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="pnlControl"
                                FlowDirection="RightToLeft"
                                Orientation="Horizontal">
                        <Button x:Name="closewindowButton"
                                Click="closewindowButton_Click">
                            <materialDesign:PackIcon Kind="WindowClose" Width="20" Height="20" Foreground="Red"/>
                        </Button>

                        <Button x:Name="maximizeButton"
                                Click="maximizeButton_Click">
                            <materialDesign:PackIcon Kind="WindowMaximize" Width="20" Height="20" Foreground="LightSlateGray"/>
                        </Button>

                        <Button x:Name="minimizedButton"
                                Click="minimizedButton_Click">
                            <materialDesign:PackIcon Kind="WindowMinimize" Width="20" Height="20" Foreground="LightSlateGray"/>
                        </Button>
                    </StackPanel>

                    <Border Background="White" Grid.Row="1">
                        <ContentControl Content="{Binding CurrentChildView}"/>
                    </Border>
                </Grid>
            </Grid>
        </materialDesign:Card>
    </Grid>
</Window>
