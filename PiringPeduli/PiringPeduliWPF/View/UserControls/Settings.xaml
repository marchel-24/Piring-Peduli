<UserControl x:Class="PiringPeduliWPF.View.UserControls.Settings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PiringPeduliWPF.View.UserControls" xmlns:viewmodel="clr-namespace:PiringPeduliWPF.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:SettingViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="565" d:DesignWidth="750"
             Background="White">

    <UserControl.Resources>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="MaxHeight" Value="20"/>
            <Setter Property="MaxWidth" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="borderBackground"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7"
                            Height="14"
                            Width="35"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                            <Ellipse x:Name="Ellipse"
                             Height="20"
                             Width="20"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Left"
                             Fill="Gray"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- DataTrigger for Checked state -->
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter TargetName="borderBackground" Property="Background" Value="LightGreen"/>
                                <Setter TargetName="Ellipse" Property="Fill" Value="Green"/>
                                <Setter TargetName="Ellipse" Property="Margin" Value="15 0 0 0"/>
                            </DataTrigger>

                            <!-- DataTrigger for Unchecked state -->
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter TargetName="borderBackground" Property="Background" Value="LightGray"/>
                                <Setter TargetName="Ellipse" Property="Fill" Value="Gray"/>
                                <Setter TargetName="Ellipse" Property="Margin" Value="0 0 0 0"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>

        <!-- Settings Title -->
        <Viewbox HorizontalAlignment="Left">
            <TextBlock Text="Settings" FontSize="28" FontWeight="Bold" Margin="20,40,20,20" Grid.Row="0"/>
        </Viewbox>

        <!-- Change Password Button -->
        <Viewbox HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="30,10,30,10" Grid.Row="1">
            <Button Content="Change Password" Background="White" BorderBrush="Gray" BorderThickness="0,0,0,1" Click="Button_Click" Width="700">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 10 0 10"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Viewbox>


        <!-- Notification Button -->
        <Viewbox HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="30 10 30 10" Grid.Row="2">
            <Border BorderBrush="Gray" BorderThickness="0,0,0,1" Width="700" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.8*"/>
                        <ColumnDefinition Width="0.2*"/>
                    </Grid.ColumnDefinitions>

                    <!-- TextBlock for Notification Label -->
                    <TextBlock Grid.Column="0" Text="Notification" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 10 0 10"/>

                    <!-- CheckBox with ToggleButtonStyle for Notification -->
                    <CheckBox Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right" 
                      Style="{DynamicResource ToggleButtonStyle}" 
                      IsChecked="{Binding IsNotificationEnabled, Mode=TwoWay}"/>
                </Grid>
            </Border>
        </Viewbox>

        <!-- Log Out Button -->
        <Viewbox HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="30,10,30,10" Grid.Row="3">
            <Button Content="Log out" HorizontalAlignment="Left" Background="White" BorderBrush="Gray" BorderThickness="0,0,0,1" Width="700" Click="Button_Click_1">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 10 0 10"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Viewbox>
        
        

    </Grid>
</UserControl>
